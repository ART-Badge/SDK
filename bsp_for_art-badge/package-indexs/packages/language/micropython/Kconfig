
menuconfig PKG_USING_MICROPYTHON
    bool "MicroPython: A lean and efficient Python implementation for microcontrollers and constrained systems."
    select RT_USING_LIBC
    select RT_USING_RTC
    default n

if PKG_USING_MICROPYTHON

    config PKG_MICROPYTHON_PATH
        string
        default "/packages/language/micropython"

    menu "Hardware Module"
        config MICROPYTHON_USING_MACHINE_I2C
            bool "machine i2c: enable i2c functions for machine module"
            select RT_USING_I2C
            default n

        config MICROPYTHON_USING_MACHINE_SPI
            bool "machine spi: enable spi functions for machine module"
            select RT_USING_SPI
            default n

        config MICROPYTHON_USING_MACHINE_UART
            bool "machine uart: enable uart functions for machine module"
            select RT_USING_SERIAL
            default n

        config MICROPYTHON_USING_MACHINE_RTC
            bool "machine rtc: enable rtc functions for machine module"
            select RT_USING_RTC
            default n

        config MICROPYTHON_USING_MACHINE_PWM
            bool "machine pwm: enable pwm functions for machine module"
            select RT_USING_PWM
            default n

        config MICROPYTHON_USING_MACHINE_ADC
            bool "machine adc: enable adc functions for machine module"
            select RT_USING_ADC
            default n
            
        config MICROPYTHON_USING_MACHINE_WDT
            bool "machine watchdog: enable watchdog functions for machine module"
            select RT_USING_WDT
            default n
       
        config MICROPYTHON_USING_MACHINE_TIMER
            bool "machine timer: enable timer functions for machine module"
            select RT_USING_HWTIMER
            default n

        config MICROPYTHON_USING_NETWORK
            bool "network: network drivers and routing configuration"
            default n

        if MICROPYTHON_USING_NETWORK
            config MICROPYTHON_USING_WLAN
            bool "network.WLAN: network WLAN framework configuration"
            default n
        endif

        config MICROPYTHON_USING_MACHINE_LCD
            bool "machine LCD: enable LCD functions for machine module"
            select BSP_USING_LCD
            select MICROPYTHON_USING_UOS
            default n
    endmenu

    menu "System Module"
        config MICROPYTHON_USING_UOS
            bool "uos: basic 'operating system' services"
            select RT_USING_DFS
            default n

        if MICROPYTHON_USING_UOS
            config MICROPYTHON_USING_FILE_SYNC_VIA_IDE
                bool "filesync: sync files through MicroPython IDE"
                default y
        endif

        config MICROPYTHON_USING_THREAD
            bool "_thread: multithreading support"
            default n

        config MICROPYTHON_USING_USELECT
            bool "uselect: wait for events on a set of streams"
            default n

        config MICROPYTHON_USING_UCTYPES
            bool "uctypes: create and manipulate C data types in Python"
            default n

        config MICROPYTHON_USING_UERRNO
            bool "uerrno: system error codes"
            default n

        if PKG_MICROPYTHON_VER_NUM > 0x11000
            config MICROPYTHON_USING_FFI
                bool "ffi: foreign function interface for native program"
                select RT_USING_MODULE
                default n
        endif
    endmenu

    menu "Tools Module"
        config MICROPYTHON_USING_CMATH
            bool "cmath: mathematical functions for complex numbers"
            default n

        config MICROPYTHON_USING_UBINASCII
            bool "ubinascii: binary/ASCII conversions"
            default n

        config MICROPYTHON_USING_UHASHLIB
            bool "uhashlib: hashing algorithms"
            default n

        config MICROPYTHON_USING_UHEAPQ
            bool "uheapq: heap queue algorithm"
            default n

        config MICROPYTHON_USING_UJSON
            bool "ujson: JSON encoding and decoding"
            select MICROPYTHON_USING_UOS
            default n

        config MICROPYTHON_USING_URE
            bool "ure: simple regular expressions"
            default n

        config MICROPYTHON_USING_UZLIB
            bool "uzlib: zlib decompression"
            default n

        config MICROPYTHON_USING_URANDOM
            bool "urandom: random variable generators"
            default n
    endmenu

    menu "Network Module"
        config MICROPYTHON_USING_USOCKET
            bool "usocket: socket operations and some related functions"
            select RT_USING_SAL
            select SAL_USING_POSIX
            select RT_LWIP_IGMP
            default n

        config MICROPYTHON_USING_USSL
            bool "ussl: secure sockets layer for https protocol"
            select PKG_USING_MBEDTLS
            default n
    endmenu

    menu "User Extended Module"
        config MICROPYTHON_USING_USEREXTMODS
        bool "modules define in your project"
        default n
        help
            You must provide 'qstrdefs.user.extmods.h'
            and 'moddefs.user.extmods.h'.
            Macro 'MICROPY_USER_MODULES' in 
            'moddefs.user.extmods.h' to export your modules.
    endmenu

    config PKG_MICROPYTHON_HEAP_SIZE
        int
        prompt "Heap size for python run environment"
        default 8192

    
    config MICROPYTHON_USING_FLOAT_IMPL_FLOAT
        bool "Enable micropython to use float instead of double"
        default y
        help
            In some MCU, using float can accelerate computing-speed because of the FPU.

    choice
        prompt "Version"
        help
            Select the this package version

        config PKG_USING_MICROPYTHON_V11200
            bool "v1.12.0"

        config PKG_USING_MICROPYTHON_V11004
            bool "v1.10.4"

        config PKG_USING_MICROPYTHON_V11003
            bool "v1.10.3"

        config PKG_USING_MICROPYTHON_V11002
            bool "v1.10.2"

        config PKG_USING_MICROPYTHON_V11001
            bool "v1.10.1"

        config PKG_USING_MICROPYTHON_V11000
            bool "v1.10"

        config PKG_USING_MICROPYTHON_V10903
            bool "v1.9.3"

        config PKG_USING_MICROPYTHON_LATEST_VERSION
            bool "latest"
    endchoice

    config PKG_MICROPYTHON_VER
        string
        default "v1.12.0"  if PKG_USING_MICROPYTHON_V11200
        default "v1.10.4"  if PKG_USING_MICROPYTHON_V11004
        default "v1.10.3"  if PKG_USING_MICROPYTHON_V11003
        default "v1.10.2"  if PKG_USING_MICROPYTHON_V11002
        default "v1.10.1"  if PKG_USING_MICROPYTHON_V11001
        default "v1.10"    if PKG_USING_MICROPYTHON_V11000
        default "v1.9.3"   if PKG_USING_MICROPYTHON_V10903
        default "latest"   if PKG_USING_MICROPYTHON_LATEST_VERSION

    config PKG_MICROPYTHON_VER_NUM
        hex
        default 0x99999    if PKG_USING_MICROPYTHON_LATEST_VERSION
        default 0x11200    if PKG_USING_MICROPYTHON_V11200
        default 0x11004    if PKG_USING_MICROPYTHON_V11004
        default 0x11003    if PKG_USING_MICROPYTHON_V11003
        default 0x11002    if PKG_USING_MICROPYTHON_V11002
        default 0x11001    if PKG_USING_MICROPYTHON_V11001
        default 0x11000    if PKG_USING_MICROPYTHON_V11000
        default 0x10903    if PKG_USING_MICROPYTHON_V10903

endif
