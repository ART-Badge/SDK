/*
 * Copyright (c) 2006-2020, RT-Thread Development Team
 *
 * SPDX-License-Identifier: Apache-2.0
 *
 * Change Logs:
 * Date           Author       Notes
 * 2020-20-28     zhangsz      init first
 */

#ifndef __SENS_H__
#define __SENS_H__

#include <rtthread.h>
#include <rthw.h>

#if defined(JSFW_USING_SENSOR)

#include <rtdevice.h>
#include "sensor.h"
#include "dcmtype.h"
#include "emq_hub.h"

EMQ_HUB_IMPORT(sens);

enum EMQ_SENS_HUB_ID
{
    EMQ_SENS_ACCE = 0, //Accelerometer
    EMQ_SENS_GYRO = 1, //Gyroscope
    EMQ_SENS_MAG = 2, //Magnetometer
    EMQ_SENS_TEMP = 3, //Temperature
    EMQ_SENS_HUMI = 4, //Humidity
    EMQ_SENS_BARO = 5, //Barometer
    EMQ_SENS_LIGHT = 6, //Light
    EMQ_SENS_PROX = 7, //Proximity
    EMQ_SENS_HR = 8, //HeartRate
    EMQ_SENS_TVOC = 9, //TVOC
    EMQ_SENS_NOISE = 10, //NOISE
    EMQ_SENS_STEP = 11, //StepCounter
    EMQ_SENS_FORCE = 12, //Force
    EMQ_SENS_SPO2 = 13, //SPO2
    EMQ_SENS_MAX,
};

enum MSG_SENSOR_ID
{
    MSG_ID_SENS_BASE = 0x0300,

    MSG_ID_SENS_ACCE_ON = 0x0301, //Accelerometer
    MSG_ID_SENS_ACCE_ID = 0x0302,
    MSG_ID_SENS_ACCE_DATA = 0x0303,
    MSG_ID_SENS_ACCE_OFF = 0x0304,
    MSG_ID_SENS_ACCE_PERIOD = 0x0305,

    MSG_ID_SENS_GYRO_ON = 0x0311, //Gyroscope
    MSG_ID_SENS_GYRO_ID = 0x0312,
    MSG_ID_SENS_GYRO_DATA = 0x0313,
    MSG_ID_SENS_GYRO_OFF = 0x0314,
    MSG_ID_SENS_GYRO_PERIOD = 0x0315,

    MSG_ID_SENS_MAG_ON = 0x0321, //Magnetometer
    MSG_ID_SENS_MAG_ID = 0x0322,
    MSG_ID_SENS_MAG_DATA = 0x0323,
    MSG_ID_SENS_MAG_OFF = 0x0324,
    MSG_ID_SENS_MAG_PERIOD = 0x0325,

    MSG_ID_SENS_TEMP_ON = 0x0331, //Temperature
    MSG_ID_SENS_TEMP_ID = 0x0332,
    MSG_ID_SENS_TEMP_DATA = 0x0333,
    MSG_ID_SENS_TEMP_OFF = 0x0334,
    MSG_ID_SENS_TEMP_PERIOD = 0x0335,

    MSG_ID_SENS_HUMI_ON = 0x0341, //Humidity
    MSG_ID_SENS_HUMI_ID = 0x0342,
    MSG_ID_SENS_HUMI_DATA = 0x0343,
    MSG_ID_SENS_HUMI_OFF = 0x0344,
    MSG_ID_SENS_HUMI_PERIOD = 0x0345,

    MSG_ID_SENS_BARO_ON = 0x0351, //Barometer
    MSG_ID_SENS_BARO_ID = 0x0352,
    MSG_ID_SENS_BARO_DATA = 0x0353,
    MSG_ID_SENS_BARO_OFF = 0x0354,
    MSG_ID_SENS_BARO_PERIOD = 0x0355,

    MSG_ID_SENS_LIGHT_ON = 0x0361, //Light
    MSG_ID_SENS_LIGHT_ID = 0x0362,
    MSG_ID_SENS_LIGHT_DATA = 0x0363,
    MSG_ID_SENS_LIGHT_OFF = 0x0364,
    MSG_ID_SENS_LIGHT_PERIOD = 0x0365,

    MSG_ID_SENS_PROX_ON = 0x0371, //Proximity
    MSG_ID_SENS_PROX_ID = 0x0372,
    MSG_ID_SENS_PROX_DATA = 0x0373,
    MSG_ID_SENS_PROX_OFF = 0x0374,
    MSG_ID_SENS_PROX_PERIOD = 0x0375,

    MSG_ID_SENS_HR_ON = 0x0381, //HeartRate
    MSG_ID_SENS_HR_ID = 0x0382,
    MSG_ID_SENS_HR_DATA = 0x0383,
    MSG_ID_SENS_HR_OFF = 0x0384,
    MSG_ID_SENS_HR_PERIOD = 0x0385,

    MSG_ID_SENS_TVOC_ON = 0x0391, //TVOC
    MSG_ID_SENS_TVOC_ID = 0x0392,
    MSG_ID_SENS_TVOC_DATA = 0x0393,
    MSG_ID_SENS_TVOC_OFF = 0x0394,
    MSG_ID_SENS_TVOC_PERIOD = 0x0395,

    MSG_ID_SENS_NOISE_ON = 0x03A1, //NOISE
    MSG_ID_SENS_NOISE_ID = 0x03A2,
    MSG_ID_SENS_NOISE_DATA = 0x03A3,
    MSG_ID_SENS_NOISE_OFF = 0x03A4,
    MSG_ID_SENS_NOISE_PERIOD = 0x03A5,

    MSG_ID_SENS_STEP_ON = 0x03B1, //StepCounter
    MSG_ID_SENS_STEP_ID = 0x03B2,
    MSG_ID_SENS_STEP_DATA = 0x03B3,
    MSG_ID_SENS_STEP_OFF = 0x03B4,
    MSG_ID_SENS_STEP_PERIOD = 0x03B5,

    MSG_ID_SENS_FORCE_ON = 0x03C1, //Force
    MSG_ID_SENS_FORCE_ID = 0x03C2,
    MSG_ID_SENS_FORCE_DATA = 0x03C3,
    MSG_ID_SENS_FORCE_OFF = 0x03C4,
    MSG_ID_SENS_FORCE_PERIOD = 0x03C5,

    MSG_ID_SENS_SPO2_ON = 0x03D1, //SPO2
    MSG_ID_SENS_SPO2_ID = 0x03D2,
    MSG_ID_SENS_SPO2_DATA = 0x03D3,
    MSG_ID_SENS_SPO2_OFF = 0x03D4,
    MSG_ID_SENS_SPO2_PERIOD = 0x03D5,
};

#endif

#endif //__SENS_H__
